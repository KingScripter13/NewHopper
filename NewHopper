-- MindGone HUB - Steal a Brainrot

local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Workspace = game:GetService("Workspace")
local LocalPlayer = Players.LocalPlayer

local ModelsToDetect = {
    ["Chicleteira Bicicleteira"] = true,
    ["Las Vaquitas Saturnitas"] = true,
    ["Pot Hotspot"] = true,
    ["Tortuginni Dragonfruitini"] = true,
    ["Garama and Madundung"] = true,
    ["Nuclearo Dinossauro"] = true,
    ["La Grande Combinasion"] = true,
    ["Graipuss Medussi"] = true,
    ["Las Tralaleritas"] = true,
    ["Los Tralaleritos"] = true,
    ["Chimpanzini Spiderini"] = true,
    ["La Vacca Staturno Saturnita"] = true,
    ["Piccione Macchina"] = true,
    ["Los Crocodillitos"] = true,
    ["Orcalero Orcala"] = true,
}

local webhookUrl = "https://discord.com/api/webhooks/1398638277438738522/ZRPi5pBNGV-zOZsXZCsJdwYgVDl0grUOP1wgpN3PtMlwMWLxD2vWIQBDSnL_oAE6dzqp"

local function sendWebhook(modelName)
    local playerCount = #Players:GetPlayers()
    local jobId = tostring(game.JobId or "Unknown")

    local embed = {
        title = "üß† Brainrot Model Detected!",
        description = ("**Model Name:** %s\n**Players in Server:** %d\n**Job ID:** ```%s```"):format(modelName, playerCount, jobId),
        color = 0x7289DA,
        footer = { text = "MindGone HUB - Steal a Brainrot" },
    }

    local data = { embeds = { embed } }
    local body = HttpService:JSONEncode(data)

    local requestFunction = syn and syn.request or http and http.request or http_request or fluxus and fluxus.request
    if not requestFunction then
        warn("HTTP request function not found for webhook!")
        return false
    end

    local success, err = pcall(function()
        local response = requestFunction({
            Url = webhookUrl,
            Method = "POST",
            Headers = { ["Content-Type"] = "application/json" },
            Body = body,
        })
        local code = response.StatusCode or response.status
        if code and (code < 200 or code >= 300) then
            error("Webhook HTTP error: " .. tostring(code))
        end
    end)

    if success then
        print("‚úÖ Webhook sent for model: "..modelName)
        return true
    else
        warn("‚ùå Webhook failed: "..tostring(err))
        return false
    end
end

local function detectModels()
    for _, obj in pairs(Workspace:GetDescendants()) do
        if obj:IsA("Model") and ModelsToDetect[obj.Name] then
            print("üîç Detected model: "..obj.Name)
            sendWebhook(obj.Name)
            return true
        end
    end
    return false
end

local function serverHop()
    print("üîÅ Searching for new server...")
    local servers = {}
    local requestFunction = syn and syn.request or http and http.request or http_request or fluxus and fluxus.request
    if requestFunction then
        local response = requestFunction({
            Url = "https://games.roblox.com/v1/games/"..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100",
            Method = "GET"
        })
        local body = response.Body or response.body
        if body then
            local data = HttpService:JSONDecode(body)
            for _, server in pairs(data.data) do
                if server.playing < server.maxPlayers and server.id ~= game.JobId then
                    table.insert(servers, server.id)
                end
            end
            if #servers > 0 then
                local maxAttempts = 5
                for attempt = 1, maxAttempts do
                    local chosenServerId = servers[math.random(1, #servers)]
                    print("üåê Attempting teleport to new server... (Try " .. attempt .. "/" .. maxAttempts .. ")")
                    local success, err = pcall(function()
                        TeleportService:TeleportToPlaceInstance(game.PlaceId, chosenServerId, LocalPlayer)
                    end)
                    if success then
                        break
                    else
                        warn("‚ö†Ô∏è Teleport failed: " .. tostring(err))
                        wait(1.5)
                    end
                end
            else
                print("‚ö†Ô∏è No suitable server found.")
            end
        else
            print("‚ùå Failed to read response body.")
        end
    else
        print("‚ùå HTTP requests not supported.")
    end
end

-- Ba≈ülangƒ±√ßta kontrol et
spawn(function()
    if detectModels() then
        wait(1)
        serverHop()
    else
        print("‚úÖ No models detected on start.")
    end
end)
